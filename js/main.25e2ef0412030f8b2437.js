"use strict";
(self["webpackChunklanding_melke_diler_two"] = self["webpackChunklanding_melke_diler_two"] || []).push([[179],{

/***/ 4584:
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {


// EXTERNAL MODULE: ./node_modules/swiper/swiper.esm.js + 89 modules
var swiper_esm = __webpack_require__(2051);
;// CONCATENATED MODULE: ./src/js/slider.js

/* harmony default export */ const slider = (function () {
  var swiperMelke = new swiper_esm/* default */.ZP('.slider-systems-melke', {
    modules: [swiper_esm/* Navigation */.W_],
    slidesPerView: 'auto',
    loop: true,
    spaceBetween: 20,
    initialSlide: 1,
    slideActiveClass: 'slide-systems-melke-active',
    centeredSlides: true,
    navigation: {
      nextEl: ".slider-systems-melke__prev",
      prevEl: ".slider-systems-melke__next"
    }
  });
  var swiperPut = new swiper_esm/* default */.ZP('.slider-put', {
    slidesPerView: 'auto',
    spaceBetween: 20
  });
  var swiperGlazing = new swiper_esm/* default */.ZP('.slider-glazing', {
    modules: [swiper_esm/* Navigation */.W_],
    slidesPerView: 'auto',
    spaceBetween: 20,
    navigation: {
      nextEl: ".slider-glazing__prev",
      prevEl: ".slider-glazing__next"
    }
  });

  if (screen.width < 1225) {
    var swiperBenefit = new swiper_esm/* default */.ZP('.slider-benefit', {
      slidesPerView: 'auto',
      spaceBetween: 20
    });
    var swiperOptions = new swiper_esm/* default */.ZP('.slider-options', {
      slidesPerView: 'auto',
      spaceBetween: 20
    });
  }

  if (screen.width < 935) {
    var swiperGlazingBalcony = new swiper_esm/* default */.ZP('.slider-glazing-balcony', {
      slidesPerView: 'auto',
      spaceBetween: 20
    });
  }

  var swiperGlazingHouse = new swiper_esm/* default */.ZP('.slider-glazing-house', {
    slidesPerView: 'auto',
    spaceBetween: 20
  });
  var swiperOurAdvantages = new swiper_esm/* default */.ZP('.slider-our-advantages', {
    slidesPerView: 'auto',
    spaceBetween: 20
  });
});
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__(7042);
;// CONCATENATED MODULE: ./src/js/timer.js


function getTimeRemaining(endtime) {
  var t = Date.parse(endtime) - Date.parse(new Date());
  var seconds = Math.floor(t / 1000 % 60);
  var minutes = Math.floor(t / 1000 / 60 % 60);
  var hours = Math.floor(t / (1000 * 60 * 60) % 24);
  var days = Math.floor(t / (1000 * 60 * 60 * 24));
  return {
    'total': t,
    'days': days,
    'hours': hours,
    'minutes': minutes,
    'seconds': seconds
  };
}

function initializeClock(id, endtime) {
  var clock = document.getElementById(id);
  var daysSpan = clock.querySelector('.days');
  var hoursSpan = clock.querySelector('.hours');
  var minutesSpan = clock.querySelector('.minutes');
  var secondsSpan = clock.querySelector('.seconds');

  function updateClock() {
    var t = getTimeRemaining(endtime);
    daysSpan.innerHTML = t.days;
    hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
    minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
    secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

    if (t.total <= 0) {
      clearInterval(timeinterval);
    }
  }

  updateClock();
  var timeinterval = setInterval(updateClock, 1000);
}
;// CONCATENATED MODULE: ./src/index.js



slider();
var deadline = "May 25 2023 00:00:00 GMT+0300"; // Для указания конкретной даты
// const deadline = new Date(Date.parse(new Date()) + 11 * 24 * 60 * 60 * 1000);

initializeClock('benefit__timer', deadline);

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, [216], () => (__webpack_exec__(4584)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,